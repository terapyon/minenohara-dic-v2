name: build
on:
  push:
    tags:
      - v*.*.*
permissions:
  contents: write
env:
  GH_TOKEN: ${{ github.token }}

jobs:
  create-release:
    name: Create release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Chaekout
        uses: actions/checkout@v3

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Run build
        run: |
          yarn install
          yarn dump minenohara_dic_v2 -r requirements.txt

      - name: Run dist on Linux
        if: startsWith(matrix.os,'ubuntu')
        run: |
          yarn dist -l deb rpm
      - name: Upload dist on Linux
        if: startsWith(matrix.os,'ubuntu')
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            dist/minenohara_dic_v2*.deb
            dist/minenohara_dic_v2*.rpm

      - name: Run dist on Windows
        if: startsWith(matrix.os,'windows')
        run: |
          yarn dist -w
      - name: Upload dist on Windows
        if: startsWith(matrix.os,'windows')
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: dist/minenohara_dic_v2*.exe

      - name: Run dist on macOS
        if: startsWith(matrix.os,'macos')
        run: |
          yarn dist -m
      - name: Upload dist on macOS
        if: startsWith(matrix.os,'macos')
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: dist/minenohara_dic_v2*.dmg

  upload-release:
    name: 'Upload Release'
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./linux/*
            ./windows/*
            ./macos/*
